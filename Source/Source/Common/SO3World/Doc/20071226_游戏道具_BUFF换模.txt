==================================================================
BUFF换模功能开发                                                 |
==================================================================

评审时间：2007.12.26

参与人员：赵纯峰 夏永 侯锐

修改目的：
--------------------------------------------------------------
1. 增加“释放BUFF可以使玩家换模”功能
2. 明确“BUFF的取代规则应该设置为“替代”，而不能共存或叠加”


本次修改涉及到的代码：
--------------------------------------------------------------
1.  在KCharacter类中，增加标识模型ID的成员变量m_dwModelID，定义为DWORD类型，初始化
    为0，保存角色数据的时候不存盘
2.  删除KNPC类中的m_dwRepresentID成员变量，并修改所有相关用到它的地方
3.  在GS_Client_Protocol.h中，增加一个换模的协议
4.  在KPlayerClient中，增加对新增换模协议的处理函数，设置player身上“增加标识模型ID”
    的成员变量为协议数据中指定的模型ID
5.  在struct G2C_PLAYER_DISPLAY_DATA中，增加一项，标识模型ID
6.  技能魔法属性的列表KAttribute中，增加换模的项，具体KAttribData中的两个变量nKey、
    nValue1分别对应“换模标识”、“m_dwModelID”
7.  换模流程，采用“应用魔法属性”的流程。在数组g_AttributeProcessFunctions[atTotal]
    中，增加处理换模的函数，将character的m_dwModelID设置成BUFF里面的模型ID
8.  BUFF结束后的属性恢复，采用“反应用魔法属性”的处理流程。判断当前对象，如果是player，
    将m_dwModelID设置回0；如果是NPC，设置成原来的模板ID（dwRepresentID[0]）
9.  在KLuaCharacter.cpp中增加一个换模的LUA接口，函数实现包括：换模、发广播（注意：是
    player和NPC共用的）
10. 删除KLuaNpc.cpp中的KNpc::LuaSetRepresentID(Lua_State* L)函数
11. 通知表现逻辑的相关开发人员，更新玩家表现数据的时候，优先检查“标识模型ID”的变量
    值，若该值不为0，设置玩家模型为指定的模型ID；若该值为0，仍做以前的操作
